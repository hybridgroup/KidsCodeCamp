- cancel_form_path = false

= form_for [:admin,@post], :html => {:class => 'post_form'} do |f|
  - if @post.errors.any?
    #error_explanation
      %h2= "#{pluralize(@post.errors.count, "error")} prohibited this post from being saved:"
      %ul
        - @post.errors.full_messages.each do |msg|
          %li= msg

  = f.hidden_field :user_id, :value => current_user.id

  //// Dynamic inputs form logic
  - if action_name == 'show'
    = f.hidden_field :parent_id, {:value => params[:id]}
  - elsif @post.parent_id.present?
    = f.hidden_field :parent_id

  - if current_user.is_admin.zero? # Editor
    - if action_name != 'show'
      - if @post.parent_id.present? # Sub
        - cancel_form_path = post_path(@post.parent_id)
      - else # Main
        .input.select
          = f.label :category, "Category"
          = f.select :category, options_for_select(['General','Discussion','Teachers'])

        - if action_name == 'edit'
          - cancel_form_path = post_path(@post)
        - else
          - cancel_form_path = posts_path
  - else
    - cancel_form_path = admin_posts_path
    - if action_name != 'show' && @post.parent_id.blank? # new or edit main
      .input.select
        = f.label :category, "Category"
        = f.select :category, options_for_select(['General','Discussion','Teachers'])

  //// Static inputs
  .input.text
    = f.label :title, "Title"
    = f.text_field :title

  .input.textarea
    = f.label :content, "Content"
    = f.text_area :content

  .actions
    = f.submit('Post')
    - if cancel_form_path
      = raw ' or ' + link_to('Cancel', cancel_form_path)
